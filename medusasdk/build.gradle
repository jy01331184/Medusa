
apply plugin: 'com.android.application'
apply plugin: 'medusa.bundle'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        medusaCfg {
            storeFile file("../medusa.keystore")
            storePassword "3666161"
            keyAlias "medusa.keystore"
            keyPassword "3666161"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.medusaCfg
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
//    provided 'com.google.code.gson:gson:2.7'
    provided group: 'com.alibaba', name: 'fastjson', version: '1.2.39'
}

bundle{
    name = 'medusasdk'
    packageId = 125
    groupId = 'com.medusa'
    version = '1.0.4'
    priority = 0
}

//group='com.medusa.sdk'
//version='1.0.3'
//def mavenLocalRepo = ''
//
//afterEvaluate{
//
//    DefaultMavenFileLocations locations = new DefaultMavenFileLocations()
//    DefaultMavenSettingsProvider provider = new DefaultMavenSettingsProvider(locations)
//    LocalMavenRepositoryLocator locator = new DefaultLocalMavenRepositoryLocator(provider)
//
//    mavenLocalRepo = locator.localMavenRepository.absolutePath
//    uploadArchives {
//        repositories {
//            mavenDeployer {
//                repository (url: uri(mavenLocalRepo))
////                repository (url: 'http://localhost:8081/repository/maven-releases/'){
////                    authentication(userName: "admin", password: "123")
////                }
//            }
//        }
//    }
//
//    Task uploadArchivesTask = tasks.findByName("uploadArchives")
//    uploadArchivesTask.doFirst {
//        Date date = new Date()
//        def minify = true
//        android.buildTypes.each {
//            if (it.name.equals("release")) {
//                minify = it.minifyEnabled
//            }
//        }
//        DefaultPublishArtifactSet ass = it.configuration.getArtifacts()
//
//        Task transformDex = tasks.findByName('transformClassesAndResourcesWithSyncLibJarsForRelease')
//        transformDex.outputs.files.files.each {
//            if(it.name.contains("classes.jar"))
//            {
//                DefaultPublishArtifact jarFileArtifact = new DefaultPublishArtifact('', 'jar', 'jar', '', date, it, new Object[0])
//                ass.add(jarFileArtifact)
//                println("==="+it.absolutePath)
//            }
//        }
//    }
//}