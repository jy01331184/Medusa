apply plugin: 'com.android.application'
apply plugin: 'medusa.rapier'
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    aaptOptions
    defaultConfig {
        applicationId "com.medusa"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    dexOptions {

    }
    signingConfigs {
        medusaCfg {
            storeFile file("../medusa.keystore")
            storePassword "3666161"
            keyAlias "medusa.keystore"
            keyPassword "3666161"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.medusaCfg
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.jniLibs.srcDirs = ['libs']

    }


}
dependencies {
    bundle 'com.medusa:medusasdk:0.0.0'
    bundle 'com.bundle3:bundle3:0.0.0'
    bundle 'com.bundle2:bundle2:1.1.0.20180302180309'
    bundle 'com.bundle1:bundle1:1.1.0.20180301202045'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}
rapier{
    staticLink = ['com.medusa:medusasdk','com.bundle1:bundle1']
}


afterEvaluate {
//
//    println(tasks.findByName('uploadArchives').class.name)
//    com.android.build.gradle.tasks.ZipAlign zipAlign = tasks.findByName('zipalignRelease')
//    println(zipAlign.getInputFile().absolutePath+":"+zipAlign.getOutputFile().absolutePath)
//    println("==="+tasks.findByName('packageRelease').outputs.files.files)
////    println(tasks.findByName('processReleaseResources').outputs.files.files)
}

